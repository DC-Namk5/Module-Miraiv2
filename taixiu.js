/* Author: DC-Nam */
/* C√≥ l·ªói li√™n h·ªá me: fb.me/levy.nam.2k5 */

module.exports.config = {
    name: "tx",
    version: "1.1.1",
    hasPermssion: 0,
    credits: "DC-Nam",
    description: "Ch∆°i t√†i x·ªâu ngay tr√™n message",
    commandCategory: "Game",
    usages: "[x·ªâu/xiu/x || tai/t√†i/t] + [ti·ªÅn c∆∞·ª£c/all/50%]",
    cooldowns: 0,
    envConfig: {
        timeout: 3000, // th·ªùi gian k·∫øt th·ª•c tung x√≠ ng·∫ßu, 1000 = 1s
        core: 3, // s·ªë ti·ªÅn c∆∞·ª£c nh√¢n cho 3
        api_key: "keytest" // key d√πng ƒë·ªÉ d√πng api
    }
}
module.exports.languages = {
    "vi": {
    	"noOption1": "B·∫°n ph·∫£i c∆∞·ª£c T√†i ho·∫∑c X·ªâu + ti·ªÅn c∆∞·ª£c",
        "InvalidSelection": "L·ª±a ch·ªçn c·ªßa b·∫°n kh√¥ng h·ª£p l·ªá\n- C√°c l·ª±a ch·ªçn h·ª£p l·ªá ‚Üì‚Üìüí¶\n ‚Ä¢ %5: %4, %5, %6\n ‚Ä¢ %1: %1, %2, %3",
        "noOption2": "B·∫°n ph·∫£i nh·∫≠p s·ªë ti·ªÅn c∆∞·ª£c ho·∫∑c all, 50%\n - all s·∫Ω c∆∞·ª£c to√†n b·ªô s·ªë ti·ªÅn hi·ªán c√≥ trong t√∫i\n - 50% s·∫Ω c∆∞·ª£c 50% s·ªë ti·ªÅn hi·ªán c√≥",
        "InvalidBets": "Ti·ªÅn c∆∞·ª£c kh√¥ng h·ª£p l·ªá ho·∫∑c nh·ªè h∆°n %1$",
        "notEnoughMoney": "Kh√¥ng ƒë·ªß %1$ ƒë·ªÉ b·∫Øt ƒë·∫ßu c∆∞·ª£c, B·∫°n c√≤n %2$ trong t√∫i",
        "rollTheDice": "üé≤ Tung x√≠ ng·∫ßu...\n => Ch√∫c b·∫°n may m·∫Øn :))",
        "win": "Nh√† c√°i ra %1, b·∫°n c∆∞·ª£c %2 => win\n - Thu v·ªÅ %3$\n - T√†i s·∫£n c√≤n: %4$",
        "lose": "Nh√† c√°i ra %1, b·∫°n c∆∞·ª£c %2 => lose\n - M·∫•t %3$\n - T√†i s·∫£n c√≤n: %4$",
        "error": "%1, ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i sau gi√¢y l√°t!"
    },
    "en": {}
}
const axios = require("axios")
module.exports.run = async ({ api, event, args, Currencies, getText }) => {
	const { threadID: tid, messageID: mid, senderID: sid } = event
    try {
    	if (!args[0]) return api.sendMessage(getText("noOption1"), tid, mid)
        const { name, envConfig } = this.config
        const { timeout, core, api_key } = global.config[name]
        let get = (await axios.get(`https://6821df2e-d4cb-44c6-abb3-185e21d7d2fb.id.repl.co/taixiu?tid=${tid}&uid=${sid}&api_key=${api_key || envConfig.api_key}`)).data
        if (get.status == false) return api.sendMessage(get.msg, tid, mid)
        var moneyUsers = (await Currencies.getData(sid)).money
        var choose = args[0].toLowerCase()
        var bets = parseInt(args[1])
        var typeTai = ["tai", "t√†i", "t"]
        var typeXiu = ["xiu", "x·ªâu", "x"]
        var other = ["all", "50%"]
        var arrayNew = []
        if (!arrayNew.concat(typeTai, typeXiu).includes(choose)) return api.sendMessage(getText("InvalidSelection", typeXiu[0], typeXiu[1], typeXiu[2], typeTai[0], typeTai[1], typeTai[2]), tid, mid)
        if (!args[1]) return api.sendMessage(getText("noOption2"), tid, mid)
        if ((isNaN(bets) || bets < 100) && !other.includes(args[1])) return api.sendMessage(getText("InvalidBets", 100), tid, mid)
        if (bets > moneyUsers && !other.includes(args[1])) return api.sendMessage(getText("notEnoughMoney", ChangeCurrency(bets), ChangeCurrency(moneyUsers)), tid, mid)
        return api.sendMessage({
            body: getText("rollTheDice"),
            attachment: await DownLoad(get.taixiu.start)
        }, tid, (error, info) => {
            return setTimeout(CheckResult, (timeout || envConfig.timeout))
            async function CheckResult() {
            	bets = args[1] == "all"? moneyUsers: args[1] == "50%"? moneyUsers / 2: bets
                api.unsendMessage(info.messageID)
                if (typeTai.includes(choose)) {
                    choose = "t√†i"
                } else choose = "x·ªâu"
                if (choose == get.taixiu.result.substr(0, 3)) {
                    msg = "win", as = "increaseMoney", bets = bets * (core || envConfig.core), moneyUser = moneyUsers + parseInt(bets)
                } else msg = "lose", as = "decreaseMoney", bets = bets, moneyUser = moneyUsers - parseInt(bets)
                return api.sendMessage({
                    body: getText(msg, get.taixiu.result, choose, ChangeCurrency(bets), ChangeCurrency(moneyUser)),
                    attachment: await DownLoad(get.taixiu.url)
                }, tid, () => Currencies[as](sid, bets), mid)
            }
        }, mid)
    } catch (e) {
        api.sendMessage(get.msg || getText("error", e), tid)
    }
}
function ChangeCurrency(number) {
	return number.toLocaleString("en-US")
	}
async function DownLoad(url) {
    return (await axios.get(url, {
        responseType: "stream"
    })).data
}